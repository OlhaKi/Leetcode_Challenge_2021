class MyHashMap(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.inner = [[-1] * 1000 for _ in range(1001)]
        

    def put(self, key, value):
        """
        value will always be non-negative.
        :type key: int
        :type value: int
        :rtype: None
        """
        row, column = key / 1000, key % 1000
        self.inner[row][column] = value

        

    def get(self, key):
        """
        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key
        :type key: int
        :rtype: int
        """
        row, column = key / 1000, key % 1000
        return  self.inner[row][column] 

    def remove(self, key):
        """
        Removes the mapping of the specified value key if this map contains a mapping for the key
        :type key: int
        :rtype: None
        """
        row, column = key / 1000, key % 1000
        self.inner[row][column] = -1
        

# Your MyHashMap object will be instantiated and called as such:
# obj = MyHashMap()
# obj.put(key,value)
# param_2 = obj.get(key)
# obj.remove(key)
