class Solution(object):
    def findUnsortedSubarray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        nums_sorted = sorted(nums)
        """
        if nums_sorted == nums:
            return 0  
        
        lt = 0
        rt = len(nums) - 1
        
        while lt < len(nums) and nums[lt] == nums_sorted[lt]:
            lt += 1
        while rt >= 0 and nums[rt] == nums_sorted[rt]:
            rt -= 1
            
        return rt-lt+1        
        """
        # approach 4
        
        start = len(nums_sorted) 
        end = 0;
        for i in range(len(nums_sorted)):
            if (nums_sorted[i] != nums[i]):
                start = min(start, i);
                end = max(end, i);
            
        if end - start >= 0:
            return end - start + 1
        return 0
        
